// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  firstname            String?
  lastname             String?
  password        String
  role            Role     @default(STUDENT)
  isInviteAccepted Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  Token           Token[]
  student         Student?
  lecturer        Lecturer?
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String    @unique
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
}

model Student {
  id              Int      @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          Int @unique
  studentId       String   @unique
}

model Lecturer {
  id              Int      @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          Int @unique
  staffId       String   @unique
  assignments     Assignment[]
}

model Assignment{
  id              Int      @id @default(autoincrement())
  title           String
  description  String  @db.Text 
  deadline         DateTime
  isDraft         Boolean @default(true)
  lecturer        Lecturer? @relation(fields: [lecturerId], references: [id])
  lecturerId      Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum Role {
  ADMIN
  STUDENT
  LECTURER
}

enum TokenType {
  ACCESS
  REFRESH
  ACTIVATION
}

