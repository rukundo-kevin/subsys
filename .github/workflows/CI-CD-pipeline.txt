name: CI/CD Pipeline

on:
  push:
    branches: ['develop']
  pull_request:
    branches: ['develop']

jobs:
  buildAndTest:
    name: CI Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x']

    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Build Application
        run: npm run build

      - name: Run Unit Tests
        run: npm run test

  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        appname: ['gitinspired-rw']
        deploy-group: ['gitinspired-rw-backend-dev']
        s3-bucket: ['training-gitinspired-rw-media']
        s3-filename: ['gitinspired-rw-codedeploy-src-backend-${{ github.sha }}']

    needs: buildAndTest
    steps:
      - uses: actions/checkout@v2

      - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: AWS Deploy Push
        run: |
          aws deploy push \
          --application-name ${{ matrix.appname }} \
          --description "Revision for ${{ matrix.appname }}-${{ github.sha }}" \
          --ignore-hidden-files \
          --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
          --source .

      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ${{ matrix.appname }} \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --deployment-group-name ${{ matrix.deploy-group }} \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip
